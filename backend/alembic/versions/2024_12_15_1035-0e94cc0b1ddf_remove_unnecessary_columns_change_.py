"""Remove unnecessary columns, change unique constraints and rename auth_user table.

Revision ID: 0e94cc0b1ddf
Revises: 3a72eced7d4d
Create Date: 2024-12-15 10:35:41.274351+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0e94cc0b1ddf'
down_revision: Union[str, None] = '3a72eced7d4d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=128), nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=150), nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), nullable=False),
    sa.Column('date_joined', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.drop_constraint('issue_title_key', 'issue', type_='unique')
    op.create_unique_constraint('issue_unique_title', 'issue', ['project_id', 'title'])
    op.drop_constraint('issue_author_id_fkey', 'issue', type_='foreignkey')
    op.create_foreign_key(None, 'issue', 'user', ['author_id'], ['id'], ondelete='CASCADE')
    op.drop_column('issue', 'key')
    op.drop_constraint('project_key_key', 'project', type_='unique')
    op.drop_constraint('project_name_key', 'project', type_='unique')
    op.create_unique_constraint('project_unique_key', 'project', ['author_id', 'key'])
    op.create_unique_constraint('project_unique_name', 'project', ['author_id', 'name'])
    op.drop_constraint('project_author_id_fkey', 'project', type_='foreignkey')
    op.create_foreign_key(None, 'project', 'user', ['author_id'], ['id'], ondelete='CASCADE')
    op.drop_column('project', 'type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('project', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'project', type_='foreignkey')
    op.create_foreign_key('project_author_id_fkey', 'project', 'auth_user', ['author_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('project_unique_name', 'project', type_='unique')
    op.drop_constraint('project_unique_key', 'project', type_='unique')
    op.create_unique_constraint('project_name_key', 'project', ['name'])
    op.create_unique_constraint('project_key_key', 'project', ['key'])
    op.add_column('issue', sa.Column('key', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'issue', type_='foreignkey')
    op.create_foreign_key('issue_author_id_fkey', 'issue', 'auth_user', ['author_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('issue_unique_title', 'issue', type_='unique')
    op.create_unique_constraint('issue_title_key', 'issue', ['title'])
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
