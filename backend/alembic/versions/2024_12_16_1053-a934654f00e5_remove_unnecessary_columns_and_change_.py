"""Remove unnecessary columns and change unique constraints.

Revision ID: a934654f00e5
Revises: 3a72eced7d4d
Create Date: 2024-12-16 10:53:27.122760+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a934654f00e5'
down_revision: Union[str, None] = '3a72eced7d4d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('auth_user', 'last_name')
    op.drop_column('auth_user', 'last_login')
    op.drop_constraint('issue_title_key', 'issue', type_='unique')
    op.create_unique_constraint('issue_unique_title', 'issue', ['project_id', 'title'])
    op.drop_column('issue', 'key')
    op.drop_constraint('project_key_key', 'project', type_='unique')
    op.drop_constraint('project_name_key', 'project', type_='unique')
    op.create_unique_constraint('project_unique_key', 'project', ['author_id', 'key'])
    op.create_unique_constraint('project_unique_name', 'project', ['author_id', 'name'])
    op.drop_column('project', 'type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('project', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint('project_unique_name', 'project', type_='unique')
    op.drop_constraint('project_unique_key', 'project', type_='unique')
    op.create_unique_constraint('project_name_key', 'project', ['name'])
    op.create_unique_constraint('project_key_key', 'project', ['key'])
    op.add_column('issue', sa.Column('key', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint('issue_unique_title', 'issue', type_='unique')
    op.create_unique_constraint('issue_title_key', 'issue', ['title'])
    op.add_column('auth_user', sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
    op.add_column('auth_user', sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False))
    # ### end Alembic commands ###
